c
@drop.length
@drop
c
@poll_id_3.present?
@poll_id_1.present?
@poll_id_2.present?
@poll_id_3
@poll_id_3 = Poll.find_by_ngo_id_3_id(params[:ngo_id])
@poll_id_2
@poll_id_2 = Poll.find_by_ngo_id_2_id(params[:ngo_id])
@poll_id_1
@poll_id_1 = Poll.find_by_ngo_id_1_id(params[:ngo_id])
Poll.find_by_ngo_id_3_id(params[:ngo_id])
Poll.find_by_ngo_id_2_id(params[:ngo_id])
Poll.find_by_ngo_id_1_id(params[:ngo_id])
params[:ngo_id]
@ngo_id
@user
c
params[:ngo_id]
Poll.find_by_ngo_id_4_id(params[:ngo_id])
Poll.find_by_ngo_id_1_id(params[:ngo_id])
c
@ngo_id.present?
@ngo_id.nil?
@ngo_id
@ngo_id.nil?
@ngo_id = Poll.find_by(ngo_id_1_id: params[:ngo_id])
c
Poll.find_by(ngo_id_1_id: params[:ngo_id])
params[:ngo_id]
c
@ngo_id
@user
c
User.find_by_id(params[:id])
params[:id]
c
@ngos.to_json(:only => [:id, :name])
@ngos
c
@ngos.length
c
@ngos
c
@user = User.find_by_id(params[:id])
@feedback
c
@drop[2]
@drop[1]
@drop[0]
c
@drop
c
@drop
@drop.nil?
@drop.present?
@drop.nill?
@drop.nill
@drop = Drop.where(city: @user.city)
@drop.nill
c
@drop
@drop = Drop.where(city: @user.city)
Drop.where(city: @user.city)
@user.city
@user
c
Drop.find_by_city(@user.city)
@user.city
@user = User.find_by_id(params[:id])
c
@user = User.find_by_id(params[:id])
user
@user
c
@user.role
@user.role = "paid"
@user.role
@user.payment_status
@user.update(payment_status: params[:payment_status])
c
params.permit(:payment_status)
c
@user.nil?  
c
@user
c
self.resource.valid_password?(params[:user][:password])
c
password: params[:user][:password]
self.resource.valid_password?("password")
self.resource.valid_password?("passwod")
self.resource.valid_password?("password")
resource
params[:password]
params[:user][:password]
self.resource.valid_password?(password: params[:user][:password])
c
self.resource.valid_password?(params[:password])
c
self.resource.valid_password?(params[:password])
password
:password
params[:password]
c
self.resource.valid_password?(params[:password])
self.resource.valid_password?
self.resource
user
c
@user = User.find(:email)
@user = User.find(:email => self.resource.email)?
@user = User.find(:email => self.resource.email)
c
resource.present?
c
:signed_in
resource.present?
self.resource
c
resource.present?
resource.persistent?
resource
resource_name
sign_in(resource_name, resource)
:notice
auth_options
self.resource
c
current_user
current_token
      message: 'You are logged in.',
      user: current_user, status: 200}
      jwt: current_token,
      message: 'You are logged in.',
{
resource
_opts
